class MapsterMapConstants{constructor(t,e){this.currentResponses=e,this.publicResponse=t}returnAllClustering(){return["circle_clustering","label_icon_clustering"]}returnAllControls(){return["zoom_control","geocoder_control","scale_control","3d_control","geolocation_control","fullscreen_control","directions_control","custom_search_filter","filter_dropdown","category_filter","list"]}returnAdditionalControlEvents(){return[["custom_search_filter","limit_results"],["custom_search_filter","include_geocoder"],["category_filter","checkbox_display"],["category_filter","category_display"],["list","sort_by_distance"],["list","show_distanance"],["list","number_of_locations"],["list","units"]]}returnExcludedFromProperties(){return["polygon","line","location","popup","popup_style"]}getFeatureType(t){return t.line?"line":t.polygon?"polygon":t.location?"location":void 0}getLayerType(t,e){if("line"===t)return"line";if("polygon"===t)return"fill";if("location"===t){if("circle"===e.location_style)return"circle";if("label"===e.location_style)return"symbol"}}returnMapFeatures(){var t=[];window.params.public?t=this.publicResponse.lines.concat(this.publicResponse.locations.concat(this.publicResponse.polygons)):t=this.currentResponses;return t}returnMapFeatureCollection(){var t={type:"FeatureCollection",features:[]};return this.returnMapFeatures().forEach((e=>{var a=JSON.parse(e.data[this.getFeatureType(e.data)]);t.features.push(this.makeGeocoderResult(window.params.public?this.publicResponse:e,a))})),t}makeGeocoderResult(t,e){var a=e.features[0];return a.properties={searchableTexts:[t.data.header_text,t.data.body_text,t.title,t.content],type:this.getFeatureType(t.data),place_name:t.title},a}returnJsonStyle(t,e){return{version:8,glyphs:"https://fonts.openmaptiles.org/{fontstack}/{range}.pbf",sources:{"raster-tiles":{type:"raster",tiles:[t],tileSize:256,attribution:e}},layers:[{id:"simple-tiles",type:"raster",source:"raster-tiles",minzoom:0,maxzoom:22}]}}returnJsonStyle(t,e){return{version:8,glyphs:"https://fonts.openmaptiles.org/{fontstack}/{range}.pbf",sources:{"raster-tiles":{type:"raster",tiles:[t],tileSize:256,attribution:e}},layers:[{id:"simple-tiles",type:"raster",source:"raster-tiles",minzoom:0,maxzoom:22}]}}returnStyleProviders(){return[{id:"streets",style:"mapbox://styles/mapbox/streets-v10"},{id:"outdoors",style:"mapbox://styles/mapbox/outdoors-v10"},{id:"light",style:"mapbox://styles/mapbox/light-v9"},{id:"dark",style:"mapbox://styles/mapbox/dark-v9"},{id:"satellite",style:"mapbox://styles/mapbox/satellite-v9"},{id:"satellite-streets",style:"mapbox://styles/mapbox/satellite-streets-v10"},{id:"empty",style:{version:8,glyphs:"https://fonts.openmaptiles.org/{fontstack}/{range}.pbf",sources:{},layers:[{id:"background",type:"background",paint:{"background-color":"rgba(255,255,255,1)"}}]}},{id:"open-street-map",style:this.returnJsonStyle("https://a.tile.openstreetmap.org/{z}/{x}/{y}.png",'&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors')},{id:"open-topo-map",style:this.returnJsonStyle("https://a.tile.opentopomap.org/{z}/{x}/{y}.png",'Map data: &copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors, <a href="http://viewfinderpanoramas.org">SRTM</a> | Map style: &copy; <a href="https://opentopomap.org">OpenTopoMap</a> (<a href="https://creativecommons.org/licenses/by-sa/3.0/">CC-BY-SA</a>)')},{id:"cyclo-osm",style:this.returnJsonStyle("https://a.tile-cyclosm.openstreetmap.fr/cyclosm/{z}/{x}/{y}.png",'<a href="https://github.com/cyclosm/cyclosm-cartocss-style/releases" title="CyclOSM - Open Bicycle render">CyclOSM</a> | Map data: &copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors')},{id:"toner-stamen",style:this.returnJsonStyle("https://stamen-tiles.a.ssl.fastly.net/toner/{z}/{x}/{y}.png",'Map tiles by <a href="http://stamen.com">Stamen Design</a>, <a href="http://creativecommons.org/licenses/by/3.0">CC BY 3.0</a> &mdash; Map data &copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors')},{id:"watercolor-stamen",style:this.returnJsonStyle("https://stamen-tiles.a.ssl.fastly.net/watercolor/{z}/{x}/{y}.png",'Map tiles by <a href="http://stamen.com">Stamen Design</a>, <a href="http://creativecommons.org/licenses/by/3.0">CC BY 3.0</a> &mdash; Map data &copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors')},{id:"terrain-stamen",style:this.returnJsonStyle("https://stamen-tiles.a.ssl.fastly.net/terrain/{z}/{x}/{y}.png",'Map tiles by <a href="http://stamen.com">Stamen Design</a>, <a href="http://creativecommons.org/licenses/by/3.0">CC BY 3.0</a> &mdash; Map data &copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors')},{id:"blank-map",style:this.returnJsonStyle("https://a.tile.openstreetmap.org/{z}/{x}/{y}.png",'&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors')}]}loaderHTML(){return'\n\t\t\t<div class="mapster-map-loader">\n\t\t\t\t<svg width="38" height="38" viewBox="0 0 38 38" xmlns="http://www.w3.org/2000/svg" stroke="#333">\n\t\t\t\t\t<g fill="none" fill-rule="evenodd">\n\t\t\t\t\t\t\t<g transform="translate(1 1)" stroke-width="2">\n\t\t\t\t\t\t\t\t\t<circle stroke-opacity=".5" cx="18" cy="18" r="18"/>\n\t\t\t\t\t\t\t\t\t<path d="M36 18c0-9.94-8.06-18-18-18">\n\t\t\t\t\t\t\t\t\t\t\t<animateTransform\n\t\t\t\t\t\t\t\t\t\t\t\t\tattributeName="transform"\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype="rotate"\n\t\t\t\t\t\t\t\t\t\t\t\t\tfrom="0 18 18"\n\t\t\t\t\t\t\t\t\t\t\t\t\tto="360 18 18"\n\t\t\t\t\t\t\t\t\t\t\t\t\tdur="1s"\n\t\t\t\t\t\t\t\t\t\t\t\t\trepeatCount="indefinite"/>\n\t\t\t\t\t\t\t\t\t</path>\n\t\t\t\t\t\t\t</g>\n\t\t\t\t\t</g>\n\t\t\t\t</svg>\n\t\t\t</div>\n\t\t'}}class ListControl{constructor(t,e,a,o){this.map=e,this.sort_by_distance=t.sort_by_distance,this.show_distance=t.show_distance,this.units=t.units,this.number_of_locations=t.number_of_locations,this.constants=a,this.currentPage=1,this.$=o}returnHTML(){var t="<ul>",e=[];this.constants.returnMapFeatures().forEach(((t,a)=>{var o=this.constants.getFeatureType(t.data);if(this.show_distance||this.sort_by_distance){var i=turf.distance(turf.center(JSON.parse(t.data[o])).geometry.coordinates,[this.map.getCenter().lng,this.map.getCenter().lat]);t.distance=i*("imperial"===this.units?.621371:1)}e.push(t)})),this.sort_by_distance&&(e=e.sort(((t,e)=>t.distance>e.distance?1:-1)));var a=[];return e.forEach(((t,e)=>{this.number_of_locations*(this.currentPage-1)<=e&&this.number_of_locations*this.currentPage>e&&a.push(t)})),a.forEach((e=>{t+=`\n        <li data-id="${e.id}">\n          ${e.title}\n          <em>${e.distance?e.distance.toFixed(2)+("imperial"===this.units?"miles":"km"):""}</em>\n        </li>\n      `})),t+="</ul>",t+='<div class="mapster-paging">',this.currentPage>1&&(t+='<span class="mapster-back dashicons dashicons-arrow-left"></span>'),this.number_of_locations*this.currentPage<this.constants.returnMapFeatures().length&&(t+='<span class="mapster-next dashicons dashicons-arrow-right"></span>'),t+="</div>"}addListeners(){var t=this;this.$(document).on("click",".mapster-list-control li",(function(){var e=t.constants.returnMapFeatures().find((e=>parseInt(e.id)==t.$(this).data("id"))),a=t.constants.getFeatureType(e.data),o=JSON.parse(e.data[a]).features[0];if("Point"===o.geometry.type)t.map.flyTo({center:o.geometry.coordinates,zoom:13});else{var i=turf.bbox(o);t.map.fitBounds(i,{padding:20})}})),this.$(document).on("click",".mapster-next",(()=>{this.currentPage=this.currentPage+1,this._container.innerHTML=this.returnHTML()})),this.$(document).on("click",".mapster-back",(()=>{this.currentPage=this.currentPage-1,this._container.innerHTML=this.returnHTML()}))}onAdd(t){this._map=t;return this._container=document.createElement("div"),this._container.className="mapboxgl-ctrl mapster-list-control",this._container.innerHTML=this.returnHTML(),this.addListeners(),this.map.on("moveend",(()=>{this._container.innerHTML=this.returnHTML()})),this._container}onRemove(){this._container.parentNode.removeChild(this._container),this._map=void 0}}class CategoryControl{constructor(t,e,a,o){this.map=e,this.displayMode=t.category_display,this.checkboxMode=t.checkbox_display,this.constants=a,this.$=o}organizeCategories(){var t=[];return this.constants.returnMapFeatures().forEach((e=>{e.categories.forEach((e=>{-1===t.findIndex((t=>t.id===e.id))&&t.push(e)}))})),t}returnHTML(){return`\n      <div>\n        ${this.returnCategoryHTML(this.organizeCategories())}\n      </div>\n    `}returnCategoryHTML(t){var e="<ul>";return t.filter((t=>0===t.parent)).forEach(((a,o)=>{e+=this.returnInputHTML(a),e+=this.returnChildrenHTML(a,t)})),e+="</ul>"}returnChildrenHTML(t,e){var a="<ul>";return e.filter((e=>e.parent===t.id)).forEach((t=>{a+=this.returnInputHTML(t),a+=this.returnChildrenHTML(t,e)})),a+="</ul>"}returnInputHTML(t){return`\n      <li>\n        ${"checkbox"===this.checkboxMode?`\n          <input class="mapster-cat-toggle" data-term="${t.id}" data-parent="${t.parent}" checked="checked" type="checkbox" />\n        `:`\n        <label class="mapster-switch">\n          <input class="mapster-cat-toggle" data-term="${t.id}" data-parent="${t.parent}" checked="checked" type="checkbox" />\n          <span class="mapster-slider mapster-round"></span>\n        </label>\n        `}\n        ${"colors"===this.displayMode?`<div class="mapster-color-swatch" style="background-color: ${t.color};"></div>`:""}\n        ${t.name}\n      </li>\n    `}setToggles(t){var e=this.$(t).data("term"),a=this.$(t).data("parent"),o=this.$(t).is(":checked");if(0===a)o?this.$(`.mapster-cat-toggle[data-parent="${e}"]`).prop("checked",!0):this.$(`.mapster-cat-toggle[data-parent="${e}"]`).prop("checked",!1);else if(o)this.$(`.mapster-cat-toggle[data-term="${a}"]`).prop("checked",!0);else{var i=this,r=!0;this.$(`.mapster-cat-toggle[data-parent="${a}"]`).each((function(){i.$(this).is(":checked")&&(r=!1)})),r&&this.$(`.mapster-cat-toggle[data-term="${a}"]`).prop("checked",!1)}}changeLayerVisibility(){var t=this,e=[];this.$(".mapster-cat-toggle").each((function(){t.$(this).is(":checked")||e.push(t.$(this).data("term"))}));var a=[];t.constants.returnMapFeatures().forEach((o=>{var i=o.categories.find((t=>e.indexOf(t.id)>-1));t.constants.getFeatureType(o.data);i&&a.push(o.id)}));t.map.setLayoutProperty("symbol","text-size",["case",["in",["get","post_id"],["literal",a]],0,["==",!1,["get","label_label_on"]],0,["has","label_text_properties_text-size"],["to-number",["get","label_text_properties_text-size"]],16]),t.map.setLayoutProperty("symbol","icon-size",["case",["in",["get","post_id"],["literal",a]],0,["==",!1,["get","icon_icon_on"]],0,["has","icon_icon_properties_icon-size"],["/",["to-number",["get","icon_icon_properties_icon-size"]],100],1]),t.map.setPaintProperty("circle","circle-radius",["case",["in",["get","post_id"],["literal",a]],0,["has","circle_radius"],["to-number",["get","circle_radius"]],0]),t.map.setPaintProperty("line","line-width",["case",["in",["get","post_id"],["literal",a]],0,["has","width"],["to-number",["get","width"]],2]),t.map.setPaintProperty("fill","fill-opacity",["case",["in",["get","post_id"],["literal",a]],0,["has","opacity"],["/",["to-number",["get","opacity"]],100],1])}addListeners(){var t=this;this.$(document).on("change",".mapster-cat-toggle",(function(){t.setToggles(this),t.changeLayerVisibility()}))}onAdd(t){return this._map=t,this._container=document.createElement("div"),this._container.className="mapboxgl-ctrl mapster-category-control",this._container.innerHTML=this.returnHTML(),this.addListeners(),this._container}onRemove(){this._container.parentNode.removeChild(this._container),this._map=void 0}}class PitchToggle{constructor(t=-20,e=70,a=null){this._bearing=t,this._pitch=e,this._minpitchzoom=a}onAdd(t){this._map=t;let e=this;return this._btn=document.createElement("button"),this._btn.className="mapboxgl-ctrl-icon mapboxgl-ctrl-pitchtoggle-3d",this._btn.type="button",this._btn["aria-label"]="Toggle Pitch",this._btn.onclick=function(){if(0===t.getPitch()){let a={pitch:e._pitch,bearing:e._bearing};e._minpitchzoom&&t.getZoom()>e._minpitchzoom&&(a.zoom=e._minpitchzoom),t.easeTo(a),e._btn.className="mapboxgl-ctrl-icon mapboxgl-ctrl-pitchtoggle-2d"}else t.easeTo({pitch:0,bearing:0}),e._btn.className="mapboxgl-ctrl-icon mapboxgl-ctrl-pitchtoggle-3d"},this._container=document.createElement("div"),this._container.className="mapboxgl-ctrl-group mapboxgl-ctrl",this._container.appendChild(this._btn),this._container}onRemove(){this._container.parentNode.removeChild(this._container),this._map=void 0}}class MapsterMapPointers{constructor(t,e,a){this.isPublic=!!t,this.publicResponse=t,this.styleProviders=e,this.$=a}returnInteractivity(){return{zoom_on_scroll:this.isPublic?this.publicResponse.map.zoom_on_scroll:this.$('.acf-field[data-name="zoom_on_scroll"] :input').is(":checked"),interactivity:this.isPublic?this.publicResponse.map.interactivity:this.$('.acf-field[data-name="interactivity"] :input').is(":checked")}}returnControlActive(t){return"custom_search_filter"===t||"filter_dropdown"===t||"category_filter"===t?this.isPublic?this.publicResponse.map.filter[t].enable:this.$(`.acf-field[data-name="${t}"] .acf-field[data-name="enable"] :input`).is(":checked"):this.isPublic?this.publicResponse.map[t].enable:this.$(`.acf-field[data-name="${t}"] .acf-field[data-name="enable"] :input`).is(":checked")}manualMapView(){return{latitude:this.isPublic?this.publicResponse.map.view.manual_latitude:this.$('.acf-field[data-name="manual_latitude"] :input').val(),longitude:this.isPublic?this.publicResponse.map.view.manual_longitude:this.$('.acf-field[data-name="manual_longitude"] :input').val(),zoom:this.isPublic?this.publicResponse.map.view.manual_zoom:this.$('.acf-field[data-name="manual_zoom"] :input').val()}}mapView(){return this.isPublic?this.publicResponse.map.view.initial_load:this.$('.acf-field[data-name="initial_load"] :input').val()}returnActiveClustering(){return{circle_clustering:this.isPublic?this.publicResponse.map.circle_clustering:this.$('.acf-field[data-name="circle_clustering"] :input').is(":checked"),label_icon_clustering:this.isPublic?this.publicResponse.map.label_icon_clustering:this.$('.acf-field[data-name="label_icon_clustering"] :input').is(":checked")}}returnControlPosition(t){return"custom_search_filter"===t||"filter_dropdown"===t||"category_filter"===t?this.isPublic?this.publicResponse.map.filter[t].position:this.$(`.acf-field[data-name="${t}"] .acf-field[data-name="position"] :input`).val():this.isPublic?this.publicResponse.map[t].position:this.$(`.acf-field[data-name="${t}"] .acf-field[data-name="position"] :input`).val()}returnDirectionsDetails(){return{unit:this.isPublic?this.publicResponse.map.directions_control.units:this.$('.acf-field[data-name="directions_control"] .acf-field[data-name="units"] :input').val(),profile:this.isPublic?this.publicResponse.map.directions_control.default_type:this.$('.acf-field[data-name="directions_control"] .acf-field[data-name="default_type"] :input').val(),placeholderOrigin:this.isPublic?this.publicResponse.map.directions_control.placeholder_text:this.$('.acf-field[data-name="directions_control"] .acf-field[data-name="placeholder_text"] :input').val()}}returnMapLibrary(){return this.isPublic?this.publicResponse.map.map_type.map_provider:this.$('.acf-field[data-name="map_provider"]').find(":input").val()}returnAccessToken(){return this.isPublic?this.publicResponse.map.map_type.access_token:this.$('.acf-field[data-name="access_token"]').find(":input").val()}getCustomStyle(){return this.isPublic?this.publicResponse.map.map_type.custom_mapbox_style:this.$('.acf-field[data-name="custom_mapbox_style"]').find(":input").val()}returnMapTerrain(){return this.isPublic?this.publicResponse.map.map_type.terrain:this.$('.acf-field[data-name="terrain"]').find(":input").is(":checked")}returnMapStyleChoice(){if(""!==this.getCustomStyle())return this.getCustomStyle();if(""!==this.returnAccessToken()){var t=this.isPublic?this.publicResponse.map.map_type.map_tile_style_access_token:this.$('.acf-field[data-name="map_tile_style_access_token"]').find(":input").val();return this.styleProviders.find((e=>e.id===t)).style}t=this.isPublic?this.publicResponse.map.map_type.map_tile_style_no_access_token:this.$('.acf-field[data-name="map_tile_style_no_access_token"]').find(":input").val();return this.styleProviders.find((e=>e.id===t)).style}returnListOptions(){return{sort_by_distance:this.isPublic?this.publicResponse.map.list.sort_by_distance:this.$('.acf-field[data-name="list"] .acf-field[data-name="sort_by_distance"]').find(":input").is(":checked"),units:this.isPublic?this.publicResponse.map.list.units:this.$('.acf-field[data-name="list"] .acf-field[data-name="units"]').find(":input").val(),show_distance:this.isPublic?this.publicResponse.map.list.show_distance:this.$('.acf-field[data-name="list"] .acf-field[data-name="show_distance"]').find(":input").is(":checked"),number_of_locations:this.isPublic?this.publicResponse.map.list.number_of_locations:this.$('.acf-field[data-name="list"] .acf-field[data-name="number_of_locations"]').find(":input").val()}}returnCategoryFilterOptions(){return{category_display:this.isPublic?this.publicResponse.map.filter.category_filter.category_display:this.$('.acf-field[data-name="category_display"]').find(":input").val(),checkbox_display:this.isPublic?this.publicResponse.map.filter.category_filter.checkbox_display:this.$('.acf-field[data-name="category_filter"] .acf-field[data-name="checkbox_display"]').find(":input").val()}}returnCustomSearchFilterOptions(){return{include_geocoder:this.isPublic?this.publicResponse.map.filter.custom_search_filter.include_geocoder:this.$('.acf-field[data-name="include_geocoder"]').find(":input").is(":checked"),countries:this.isPublic?this.publicResponse.map.filter.custom_search_filter.limit_results:this.$('.acf-field[data-name="custom_search_filter"] .acf-field[data-name="limit_results"]').find(":input").val()}}returnPopupContent(t){return{header_text:t.popup.header_text,featured_image:t.popup.featured_image,body_text:t.popup.body_text,button_text:t.popup.button_text,button_action:t.popup.button_action,button_url:t.popup.button_url,open_link_in_new_tab:t.popup.open_link_in_new_tab}}returnPopupLayout(t){return{enable_header:t.popup_style.enable_header,enable_image:t.popup_style.enable_image,enable_body:t.popup_style.enable_body,enable_footer:t.popup_style.enable_footer,enable_pointer:t.popup_style.enable_pointer,use_custom_css:t.popup_style.use_custom_css,popup_class:t.popup_style.popup_class}}returnPopupOptions(t){return{closeButton:t.popup_style.close_button,closeOnClick:t.popup_style.close_on_click,closeMapMove:t.popup_style.close_on_map_move,maxWidth:t.popup_style.max_width+"px"}}returnPopupCSS(t){return{background:t.popup_style.background,header:t.popup_style.header,image_height:t.popup_style.image_height,body:t.popup_style.body,footer:t.popup_style.footer,button:t.popup_style.button,pointer:t.popup_style.pointer,header_text:t.popup_style.header_text,body_text:t.popup_style.body_text,button_text:t.popup_style.button_text,align:t.popup_style.align,css_editor:t.popup_style.css_editor,max_width:t.popup_style.max_width}}}class MapsterMapUtils{constructor(t,e,a,o){this.map=t,this.pointers=e,this.constants=a,this.$=o}getLayerExpressions(t,e){var a=e.data;if("line"===t)return{layout:{},paint:{"line-color":["case",["has","color"],["get","color"],"#000"],"line-opacity":["case",["has","opacity"],["/",["to-number",["get","opacity"]],100],1],"line-width":["case",["has","width"],["to-number",["get","width"]],2],"line-dasharray":"mapbox"===this.pointers.returnMapLibrary()?["case",["==",!0,["to-boolean","dashed_line"]],["get","dash_properties_line_dash_array"],["literal",[1,0]]]:[1,0]}};if("polygon"===t)return{layout:{},paint:{"fill-color":["case",["has","color"],["get","color"],"#000"],"fill-opacity":["case",["has","opacity"],["/",["to-number",["get","opacity"]],100],1],"fill-outline-color":["case",["has","outline-color"],["get","outline-color"],"rgba(0,0,0,0)"]}};if("location"===t){if("circle"===a.location_style)return{layout:{},paint:{"circle-color":["case",["has","circle_color"],["get","circle_color"],"#000"],"circle-opacity":["case",["has","circle_opacity"],["/",["to-number",["get","circle_opacity"]],100],1],"circle-radius":["case",["has","circle_radius"],["to-number",["get","circle_radius"]],0],"circle-stroke-width":["case",["has","circle_stroke-width"],["to-number",["get","circle_stroke-width"]],0],"circle-stroke-color":["case",["has","circle_stroke-color"],["get","circle_stroke-color"],"#000"],"circle-stroke-opacity":["case",["has","circle_stroke-opacity"],["/",["to-number",["get","circle_stroke-opacity"]],100],1]}};if("label"===a.location_style)return{layout:{"text-field":["case",["has","label_text_properties_text-field"],["get","label_text_properties_text-field"],"New Text"],"text-font":["case",["==","Open Sans Regular",["get","label_text_properties_text-font"]],["literal",["Open Sans Regular"]],["==","Open Sans Bold",["get","label_text_properties_text-font"]],["literal",["Open Sans Bold"]],["==","Open Sans Italic",["get","label_text_properties_text-font"]],["literal",["Open Sans Italic"]],["==","Klokantech Noto Sans Regular",["get","label_text_properties_text-font"]],["literal",["Klokantech Noto Sans Regular"]],["==","Klokantech Noto Sans Bold",["get","label_text_properties_text-font"]],["literal",["Klokantech Noto Sans Bold"]],["==","Klokantech Noto Sans Italic",["get","label_text_properties_text-font"]],["literal",["Klokantech Noto Sans Italic"]],["==","Metropolis",["get","label_text_properties_text-font"]],["literal",["Metropolis"]],["==","Metropolis Bold",["get","label_text_properties_text-font"]],["literal",["Metropolis Bold"]],["==","Metropolis Regular Italic",["get","label_text_properties_text-font"]],["literal",["Metropolis Regular Italic"]],["literal",["Open Sans Regular"]]],"text-rotate":["case",["has","label_text_properties_text-rotate"],["to-number",["get","label_text_properties_text-rotate"]],0],"text-size":["case",["==",!1,["get","label_label_on"]],0,["has","label_text_properties_text-size"],["to-number",["get","label_text_properties_text-size"]],16],"icon-size":["case",["==",!1,["get","icon_icon_on"]],0,["has","icon_icon_properties_icon-size"],["/",["to-number",["get","icon_icon_properties_icon-size"]],100],1],"icon-rotate":["case",["has","icon_icon_properties_icon-rotate"],["to-number",["get","icon_icon_properties_icon-rotate"]],0],"icon-allow-overlap":!0,"icon-ignore-placement":!0,"icon-anchor":["case",["has","icon_icon_properties_icon-anchor"],["get","icon_icon_properties_icon-anchor"],"center"],"icon-offset":["case",["has","icon_icon_properties_offset_array"],["get","icon_icon_properties_offset_array"],["literal",[0,0]]],"text-offset":["case",["has","label_text_properties_offset_array"],["get","label_text_properties_offset_array"],["literal",[0,0]]]},paint:{"text-color":["case",["has","label_text_properties_text-color"],["get","label_text_properties_text-color"],"#000000"],"text-halo-width":["case",["has","label_text_properties_text-halo-width"],["to-number",["get","label_text_properties_text-halo-width"]],1],"text-halo-color":["case",["has","label_text_properties_text-halo-color"],["get","label_text_properties_text-halo-color"],"#FFFFFF"],"text-halo-blur":["case",["has","label_text_properties_text-halo-blur"],["/",["to-number",["get","label_text_properties_text-halo-blur"]],100],1],"text-opacity":["case",["has","label_text_properties_text-opacity"],["/",["to-number",["get","label_text_properties_text-opacity"]],100],1],"icon-opacity":["case",["has","icon_icon_properties_icon-opacity"],["/",["to-number",["get","icon_icon_properties_icon-opacity"]],100],1]}}}}setIcon(t){t.features.forEach((t=>{t.properties.icon_icon_on&&t.properties["icon_icon_properties_icon-image_url"]&&this.addNewIcon(t.properties["icon_icon_properties_icon-image_url"],t.properties["icon_icon_properties_icon-image_id"],(()=>{this.map.setLayoutProperty("symbol","icon-image",["case",["has","icon_icon_properties_icon-image_id"],["concat","icon-image-",["get","icon_icon_properties_icon-image_id"]],"none"])}))}))}assignToProperty(t,e,a,o){if("object"==typeof e[a])for(var i in e[a])this.assignToProperty(t,e[a],i,o?o+"_"+a:a);else{var r=o?o+"_"+a:a;t.properties[r]=e[a]}}addingNecessaryArraysProperties(t){t.properties.dash_properties_dash_length&&(t.properties.dash_properties_line_dash_array=[parseFloat(t.properties.dash_properties_dash_length),parseFloat(t.properties.dash_properties_gap_length)]),t.properties["label_text_properties_text-translate-x"]&&(t.properties.label_text_properties_offset_array=[parseFloat(t.properties["label_text_properties_text-translate-x"]),parseFloat(t.properties["label_text_properties_text-translate-y"])]),t.properties["icon_icon_properties_icon-translate-x"]&&(t.properties.icon_icon_properties_offset_array=[parseFloat(t.properties["icon_icon_properties_icon-translate-x"]),parseFloat(t.properties["icon_icon_properties_icon-translate-y"])])}makeFeatureWithProperties(t,e){var a=JSON.parse(JSON.stringify(e));for(var o in a.id=t.id,a.properties.post_id=t.id,t.data)-1===this.constants.returnExcludedFromProperties().indexOf(o)&&this.assignToProperty(a,t.data,o);return this.addingNecessaryArraysProperties(a),a}createGeoJSON(t,e){var a={type:"FeatureCollection",features:[]};return this.constants.returnMapFeatures().forEach((o=>{if(t===this.constants.getFeatureType(o.data)&&e===this.constants.getLayerType(t,o.data)){var i=JSON.parse(o.data[t]);if(i.features[0]){var r=this.makeFeatureWithProperties(o,i.features[0]);a.features.push(r)}}})),"symbol"===e&&this.setIcon(a),a}getLayerStyles(t,e){var a=e.data;if("location"===t&&"marker"===a.location_style)return{color:a.marker.color,scale:parseFloat(a.marker.scale)/100,rotation:parseFloat(a.marker.rotation),anchor:a.marker.anchor}}addNewIcon(t,e,a){const o=this.map;t||a(),"https:"===window.location.protocol&&t.indexOf("http://")>-1&&(t=t.replace("http","https"));var i=new Image;i.src=t,i.onload=function(){o.loaded()?(o.hasImage(`icon-image-${e}`)?o.updateImage(`icon-image-${e}`,i):o.addImage(`icon-image-${e}`,i),a()):o.once("idle",(()=>{o.hasImage(`icon-image-${e}`)?o.updateImage(`icon-image-${e}`,i):o.addImage(`icon-image-${e}`,i),a()}))}}changeTerrain(){if("mapbox"===this.pointers.returnMapLibrary()){const t=this.map;this.pointers.returnMapTerrain()?(t.addSource("mapbox-dem",{type:"raster-dem",url:"mapbox://mapbox.mapbox-terrain-dem-v1",tileSize:512,maxzoom:14}),t.setTerrain({source:"mapbox-dem",exaggeration:1.5}),t.addLayer({id:"sky",type:"sky",paint:{"sky-type":"atmosphere","sky-atmosphere-sun":[0,0],"sky-atmosphere-sun-intensity":15}})):(t.getLayer("sky")&&t.removeLayer("sky"),t.setTerrain(null),t.getSource("mapbox-dem")&&t.removeSource("mapbox-dem"))}}setControls(t,e){const a=this.map;if("zoom_control"===t){const o=new e.NavigationControl;return a.addControl(o,this.pointers.returnControlPosition(t)),o}if("geocoder_control"===t){const o=new MapboxGeocoder({accessToken:e.accessToken,mapboxgl:e});return a.addControl(o,this.pointers.returnControlPosition(t)),o}if("directions_control"===t){const o=this.pointers.returnDirectionsDetails(),i=new MapboxDirections({accessToken:e.accessToken,mapboxgl:e,unit:o.unit,profile:o.profile,placeholderOrigin:o.placeholderOrigin});return a.addControl(i,this.pointers.returnControlPosition(t)),i}if("3d_control"===t){const e=new PitchToggle;return a.addControl(e,this.pointers.returnControlPosition(t)),e}if("scale_control"===t){const o=new e.ScaleControl;return a.addControl(o,this.pointers.returnControlPosition(t)),o}if("geolocation_control"===t){const o=new e.GeolocateControl;return a.addControl(o,this.pointers.returnControlPosition(t)),o}if("fullscreen_control"===t){const o=new e.FullscreenControl;return a.addControl(o,this.pointers.returnControlPosition(t)),o}if("custom_search_filter"===t){var o=this.pointers.returnCustomSearchFilterOptions(),i={mapboxgl:e};o.include_geocoder?i.accessToken=e.accessToken:i.localGeocoderOnly=!0,""!==o.countries&&(i.countries=o.countries),i.localGeocoder=t=>this.searchLocalFeatures(t);const r=new MapboxGeocoder(i);return a.addControl(r,this.pointers.returnControlPosition(t)),r}if("filter_dropdown"===t){(i={mapboxgl:e,localGeocoderOnly:!0,placeholder:"Click to select a place",minLength:0,limit:1e3}).localGeocoder=t=>this.searchLocalFeatures(t);const o=new MapboxGeocoder(i);return a.addControl(o,this.pointers.returnControlPosition(t)),this.modifyDropdown(o),o}if("category_filter"===t){var r=this.pointers.returnCategoryFilterOptions();const e=new CategoryControl(r,a,this.constants,this.$);return a.addControl(e,this.pointers.returnControlPosition(t)),e}if("list"===t){r=this.pointers.returnListOptions();const e=new ListControl(r,a,this.constants,this.$);return a.addControl(e,this.pointers.returnControlPosition(t)),e}}modifyDropdown(t){t.container.classList.add("mapster-maps-dropdown");this.$(".mapster-maps-dropdown").find(".mapboxgl-ctrl-geocoder--icon.mapboxgl-ctrl-geocoder--icon-search").replaceWith('<svg viewBox="0 0 32 32" class="mapboxgl-ctrl-geocoder--icon mapboxgl-ctrl-geocoder--icon-search" viewBox="0 0 32 32" aria-hidden="true">\n      <path d="M24 11.305l-7.997 11.39L8 11.305z"/>\n    </svg>'),this.$(".mapster-maps-dropdown").find(".mapboxgl-ctrl-geocoder--input").wrap('<div class="input-wrapper"></div>'),this.$(".mapster-maps-dropdown").find(".mapboxgl-ctrl-geocoder--input").attr("disabled",!0),this.$(document).on("click",".mapster-maps-dropdown .input-wrapper",(()=>{t.setInput(""),this.$(".suggestions-wrapper .suggestions li").removeClass("active")})),this.$(document).on("click",".mapboxgl-ctrl-geocoder--icon.mapboxgl-ctrl-geocoder--icon-close",(()=>{t.clear(),this.$(".suggestions-wrapper .suggestions").hide()}))}searchLocalFeatures(t){var e=[];return this.constants.returnMapFeatureCollection().features.forEach((a=>{var o=!1;a.properties.searchableTexts.forEach((i=>{if(i&&(i.toLowerCase().indexOf(t.toLowerCase())>-1||" "===t)&&!o){var r={type:"Feature",place_name:a.properties.place_name,place_type:a.properties.type,center:turf.center(a).geometry.coordinates};"Point"!==a.geometry.type&&(r.bbox=turf.bbox(a)),e.push(r),o=!0}}))})),e.sort(((t,e)=>t.place_name>e.place_name?1:-1)),e}getPopupStyle(t){var e=this.pointers.returnPopupCSS(t),a=this.pointers.returnPopupLayout(t),o=this.pointers.returnPopupContent(t),i=t.popup_style.id;return`\n      .mapboxgl-popup .mapboxgl-popup-content, .maplibregl-popup .maplibregl-popup-content {\n        padding: 0px;\n        background: none;\n        border: none;\n        border-radius: none;\n        box-shadow: none;\n      }\n      #mapster-popup-${i}.map-popup-background {\n        background : ${e.background};\n        text-align : ${e.align};\n        border-radius: 3px;\n        box-shadow: 0 1px 2px rgb(0 0 0 / 10%);\n      }\n      #mapster-popup-${i} .map-popup-header {\n        background : ${e.header};\n        padding: 10px;\n      }\n      #mapster-popup-${i} .map-popup-header h2 {\n        all : revert;\n        color : ${e.header_text};\n        font-weight: bold;\n        margin: 0;\n        padding: 0;\n      }\n      #mapster-popup-${i} .map-popup-image {\n        background-image : url(${o.featured_image.url});\n        background-position : center center;\n        background-size: cover;\n        height : ${e.image_height}px;\n        width: 100%;\n      }\n      #mapster-popup-${i} .map-popup-body {\n        margin-top: -1px;\n        background : ${e.body};\n        padding: 10px;\n        color : ${e.body_text};\n      }\n      #mapster-popup-${i} .map-popup-body p {\n        padding: 0px;\n        margin: 0px;\n      }\n      #mapster-popup-${i} .map-popup-footer {\n        margin-top: -1px;\n        background : ${e.footer};\n        padding: 10px;\n      }\n      #mapster-popup-${i} .map-popup-footer .map-popup-footer-button {\n        all : revert;\n        background : ${e.button};\n        border-color: ${e.button};\n        color : ${e.button_text};\n        padding: 5px;\n        text-decoration: none;\n        text-shadow: none;\n      }\n      #mapster-popup-${i} .map-popup-footer .map-popup-footer-button:hover {\n        cursor: pointer;\n        filter: brightness(1.15);\n      }\n\t\t\t.mapboxgl-popup.mapboxgl-popup-anchor-top .mapboxgl-popup-tip, .maplibregl-popup.maplibregl-popup-anchor-top .maplibregl-popup-tip,\n\t\t\t.mapboxgl-popup.mapboxgl-popup-anchor-top-left .mapboxgl-popup-tip, .maplibregl-popup.maplibregl-popup-anchor-top-left .maplibregl-popup-tip,\n\t\t\t.mapboxgl-popup.mapboxgl-popup-anchor-top-right .mapboxgl-popup-tip, .maplibregl-popup.maplibregl-popup-anchor-top-right .maplibregl-popup-tip {\n        border-bottom-color : ${e.pointer};\n        display : ${a.enable_pointer?"block":"none"};\n      }\n\t\t\t.mapboxgl-popup.mapboxgl-popup-anchor-right .mapboxgl-popup-tip, .maplibregl-popup.maplibregl-popup-anchor-right .maplibregl-popup-tip {\n\t\t\t\tborder-left-color : ${e.pointer};\n        display : ${a.enable_pointer?"block":"none"};\n\t\t\t}\n\t\t\t.mapboxgl-popup.mapboxgl-popup-anchor-left .mapboxgl-popup-tip, .maplibregl-popup.maplibregl-popup-anchor-left .maplibregl-popup-tip {\n\t\t\t\tborder-right-color : ${e.pointer};\n        display : ${a.enable_pointer?"block":"none"};\n\t\t\t}\n\t\t\t.mapboxgl-popup.mapboxgl-popup-anchor-bottom .mapboxgl-popup-tip, .maplibregl-popup.maplibregl-popup-anchor-bottom .maplibregl-popup-tip,\n\t\t\t.mapboxgl-popup.mapboxgl-popup-anchor-bottom-left .mapboxgl-popup-tip, .maplibregl-popup.maplibregl-popup-anchor-bottom-left .maplibregl-popup-tip,\n\t\t\t.mapboxgl-popup.mapboxgl-popup-anchor-bottom-right .mapboxgl-popup-tip, .maplibregl-popup.maplibregl-popup-anchor-bottom-right .maplibregl-popup-tip {\n        border-top-color : ${e.pointer};\n        display : ${a.enable_pointer?"block":"none"};\n      }\n    `}getPopupHTML(t){var e=this.getPopupStyle(t),a=this.pointers.returnPopupCSS(t),o=this.pointers.returnPopupLayout(t),i=this.pointers.returnPopupContent(t),r=a.css_editor.replace(/#mapster-popup/g,`#mapster-popup-${t.popup_style.id}`);return`\n      <style>${e}</style>\n      ${o.use_custom_css?`<style>${r}</style>`:""}\n      <div id="mapster-popup-${t.popup_style.id}" class="map-popup-background ${o.popup_class}">\n        ${o.enable_header?`<div class="map-popup-header">\n            <h2>${i.header_text}</h2>\n          </div>`:""}\n        ${o.enable_image?'<div class="map-popup-image"></div>':""}\n        ${o.enable_body?`<div class="map-popup-body">\n            <p>${i.body_text}\n          </div>`:""}\n        ${o.enable_footer?`<div class="map-popup-footer">\n            ${"do-nothing"===i.button_action?`<button class="map-popup-footer-button">${i.button_text}</button>`:""}\n            ${"to-post"===i.button_action?`<button class="map-popup-footer-button" onclick="${i.open_link_in_new_tab?`window.open('${t.popup.permalink}', '_blank');`:`window.open('${t.popup.permalink}', '_self');`}">\n                ${i.button_text}\n               </button>`:""}\n            ${"to-link"===i.button_action?`<button class="map-popup-footer-button" onclick="${i.open_link_in_new_tab?`window.open('${i.button_url}', '_blank');`:`window.open('${i.button_url}', '_self');`}">\n                ${i.button_text}\n               </button>`:""}\n          </div>`:""}\n      </div>\n    `}}!function(t){"use strict";var e,a,o,i,r,n,s,p=[],l=[],c=[],u=[];if(window.params.public)t(".mapster-wp-maps").each((function(){var e;e=t(this).attr("id"),fetch(`${window.params.rest_url}mapster-wp-maps/map?id=${e.replace("mapster-wp-maps-","")}`).then((t=>t.json())).then((o=>{r=new MapsterMapConstants(i=o,l),s=new MapsterMapPointers(i,r.returnStyleProviders(),t),function(e){i.map.layout.full_page?(t("#"+e).height(window.innerHeight+i.map.layout.height_units),t("#"+e).width("100%"),i.map.layout.ignore_container&&(t(`<div id="margin-compensator" style="padding-bottom: ${window.innerHeight}px"></div>`).insertAfter("#"+e),t("#"+e).css("marginLeft",-1*t("#"+e).offset().left+"px"),t("#"+e).css("position","absolute"))):(t("#"+e).height(i.map.layout.height+i.map.layout.height_units),t("#"+e).width(i.map.layout.width+i.map.layout.width_units))}(e),C(),_(e),function(){if(i.map.javascript){var t=window[i.map.javascript],e=i.locations.concat(i.lines.concat(i.polygons));t(a,e)}}()}))}));else{document.body.classList.contains("block-editor-page")?t("#mapster-wp-map-preview").prependTo("#normal-sortables"):t("#mapster-wp-map-preview").prependTo("#acf_after_title-sortables");var d=acf.getFields().length,h=0,m=0;function e(e){"select"!==e&&(h+=1),h===d&&4===m&&function(){r=new MapsterMapConstants(i,l),s=new MapsterMapPointers(!1,r.returnStyleProviders(),t),window.location.pathname.indexOf("post-new.php")>-1&&""===t('.acf-field[data-name="access_token"]').find(":input").val()&&t('.acf-field[data-name="access_token"]').find(":input").val(window.params.mapbox_access_token);t(document).on("change",'.acf-field[data-name="map_tile_style_access_token"] :input',(function(){f()})),t(document).on("change",'.acf-field[data-name="map_tile_style_no_access_token"] :input',(function(){f()})),t(document).on("change",'.acf-field[data-name="custom_mapbox_style"] :input',(function(){f()})),t(document).on("change",'.acf-field[data-name="terrain"] :input',(function(){n.changeTerrain()})),t(document).on("change",'.acf-field[data-name="lines"] :input',(function(){w("line")})),t(document).on("change",'.acf-field[data-name="polygons"] :input',(function(){w("polygon")})),t(document).on("change",'.acf-field[data-name="locations"] :input',(function(){w("location")})),t(document).on("change",'.acf-field[data-name="add_by_category"] :input',(function(){!function(){var e=t('.acf-field[data-name="add_by_category"] select').select2("data"),a=e.find((t=>-1===u.indexOf(t.id)));if(a)fetch(`${window.params.rest_url}mapster-wp-maps/category?id=${a.id}`).then((t=>t.json())).then((t=>{u.push(a.id),t.forEach((t=>{var e=r.getFeatureType(t.data);""!==t.data[e]?y(t,e):window.alert(`This ${e} has no geographic data.`)}))}));else{var o=e.map((t=>t.id)),i=u.find((t=>-1===o.indexOf(t)));u.splice(u.indexOf(i),1),JSON.parse(JSON.stringify(l)).forEach((t=>{t.categories.find((t=>t.id===parseInt(i)))&&k(t.id)}))}}()})),r.returnAllControls().forEach((e=>{t(document).on("change",`.acf-field[data-name="${e}"] .acf-field[data-name="enable"] :input`,(function(){M()})),t(document).on("change",`.acf-field[data-name="${e}"] .acf-field[data-name="position"] :input`,(function(){M()}))})),r.returnAdditionalControlEvents().forEach((e=>{t(document).on("change",`.acf-field[data-name="${e[0]}"] .acf-field[data-name="${e[1]}"] :input`,(function(){M()}))})),r.returnAllClustering().forEach((e=>{t(document).on("change",`.acf-field[data-name="${e}"] :input`,(function(){v()}))})),C(),_("map")}()}acf.add_action("ready_field",e),acf.addAction("select2_init",(function(t,a,o,i){m+=1,e("select")}))}function _(o){a=new e.Map({container:o,style:s.returnMapStyleChoice(),bounds:window.params.public?g():null,center:"manual"===s.mapView()?[s.manualMapView().longitude,s.manualMapView().latitude]:[0,0],zoom:"manual"===s.mapView()?s.manualMapView().zoom:2}),n=new MapsterMapUtils(a,s,r,t),t(`#${o}`).append(r.loaderHTML()),window.params.public&&(s.returnInteractivity().zoom_on_scroll||a.scrollZoom.disable(),s.returnInteractivity().interactivity||(a.scrollZoom.disable(),a.boxZoom.disable(),a.dragRotate.disable(),a.dragPan.disable(),a.keyboard.disable(),a.doubleClickZoom.disable(),a.touchZoomRotate.disable())),a.on("load",(()=>{a.resize(),$((()=>{t(`#${o} .mapster-map-loader`).fadeOut(),!window.params.public&&l.length>0&&a.fitBounds(g(),{duration:0,padding:20}),M()})),v(),n.changeTerrain()}))}function g(){if("fit-features"===s.mapView()){var t={type:"FeatureCollection",features:[]},e=r.returnMapFeatures();if(e.length>0)return e.forEach((e=>{var a=JSON.parse(e.data[r.getFeatureType(e.data)]);t.features.push(a.features[0])})),turf.bbox(t)}return null}function f(){a.setStyle(s.returnMapStyleChoice()),a.once("idle",(()=>{l.forEach((t=>{y(t,r.getFeatureType(t.data))}))}))}function b(t,i){o&&o.remove(),o=new e.Popup(s.returnPopupOptions(t)).setLngLat(i).setHTML(n.getPopupHTML(t)).addTo(a)}function y(t,e){if(JSON.parse(t.data[e]).features[0])if(l.find((e=>e.id===t.id))||l.push(t),"marker"!==t.data.location_style){var p=r.getLayerType(e,t.data),c=n.createGeoJSON(e,p);if(a.getSource(p))a.getSource(p).setData(c);else{a.addSource(p,{type:"geojson",data:c});var u=n.getLayerExpressions(e,t);if(a.addLayer({id:p,source:p,type:p,paint:u.paint,layout:u.layout}),window.params.public&&s.returnInteractivity().interactivity){a.on("click",p,(t=>{var e=a.queryRenderedFeatures(t.point,{layers:[p]});if(e[0]){var o=i.locations.concat(i.lines.concat(i.polygons)).find((t=>t.id===e[0].properties.post_id));o.data.enable_popup&&"click"===o.data.interaction&&("fill"!==e[0].layer.id||"fill"===e[0].layer.id&&0!==e[0].layer.paint["fill-opacity"])&&b(o.data,t.lngLat),o.data.click_link&&o.data.click_link.url&&(o.data.click_link.open_link_in_new_tab?window.open(o.data.click_link.url):window.open(o.data.click_link.url,"_self"))}}));var d=!1;a.on("mousemove",p,(t=>{var e=a.queryRenderedFeatures(t.point,{layers:[p]});if(e[0]){var o=i.locations.concat(i.lines.concat(i.polygons)).find((t=>t.id===e[0].properties.post_id));o.data.enable_popup&&"hover"===o.data.interaction&&("fill"!==e[0].layer.id||"fill"===e[0].layer.id&&0!==e[0].layer.paint["fill-opacity"])&&(d=o.data,b(o.data,t.lngLat))}})),a.on("mouseout",p,(t=>{d&&d.enable_popup&&"hover"===d.interaction&&o.remove()}))}}}else"marker"===t.data.location_style&&x();else window.alert(`This ${e} has no geographic data.`)}function x(){p.length>0&&(p.forEach((t=>{t.remove()})),p=[]),l.filter((t=>"marker"===t.data.location_style)).forEach((t=>{var o=n.getLayerStyles(r.getFeatureType(t.data),t),i=JSON.parse(t.data.location).features[0].geometry.coordinates,l=new e.Marker(o).setLngLat(i);window.params.public&&s.returnInteractivity().interactivity&&(t.data.enable_popup&&"click"===t.data.interaction&&l.getElement().addEventListener("click",(()=>{l.setPopup(new e.Popup(s.returnPopupOptions(t.data)).setHTML(n.getPopupHTML(t.data))),t.data.click_link&&t.data.click_link.url&&(t.data.click_link.open_link_in_new_tab?window.open(t.data.click_link.url):window.open(t.data.click_link.url,"_self"))})),t.data.enable_popup&&"hover"===t.data.interaction&&(l.getElement().addEventListener("mousemove",(()=>{l.setPopup(new e.Popup(s.returnPopupOptions(t.data)).setHTML(n.getPopupHTML(t.data))).togglePopup()})),l.getElement().addEventListener("mouseout",(()=>{l.togglePopup()})))),l.addTo(a),p.push(l)}))}function v(){var t=s.returnActiveClustering(),e=[];t.label_icon_clustering&&e.push("symbol"),t.circle_clustering&&e.push("circle"),["symbol","circle"].forEach((t=>{a.getLayer(`${t}-cluster-count`)&&(a.removeLayer(`${t}-cluster-count`),a.removeLayer(`${t}-clusters`),a.removeLayer(t),a.removeSource(t),$())})),e.forEach((t=>{a.getLayer(t)&&a.getSource(t)&&(a.removeLayer(t),a.removeSource(t));var e=n.createGeoJSON("location",t);a.addSource(t,{type:"geojson",data:e,cluster:!0,clusterMaxZoom:14,clusterRadius:50});var o=n.getLayerExpressions("location",{data:{location_style:"symbol"===t?"label":"circle"}});a.addLayer({id:t,source:t,type:t,filter:["!",["has","point_count"]],paint:o.paint,layout:o.layout}),a.addLayer({id:`${t}-clusters`,type:"circle",source:t,filter:["has","point_count"],paint:{"circle-color":["step",["get","point_count"],"#51bbd6",100,"#f1f075",750,"#f28cb1"],"circle-radius":["step",["get","point_count"],20,100,30,750,40]}}),a.addLayer({id:`${t}-cluster-count`,type:"symbol",source:t,filter:["has","point_count"],layout:{"text-field":"{point_count_abbreviated}","text-font":["DIN Offc Pro Medium","Arial Unicode MS Bold"],"text-size":12}}),a.on("click",`${t}-clusters`,(e=>{const o=a.queryRenderedFeatures(e.point,{layers:[`${t}-clusters`]}),i=o[0].properties.cluster_id;a.getSource(t).getClusterExpansionZoom(i,((t,e)=>{a.easeTo({center:o[0].geometry.coordinates,zoom:e+1})}))}))}))}function w(e){var a=t(`.acf-field[data-name="${e}s"] select`).select2("data"),o=a.find((t=>-1===P(e).indexOf(parseInt(t.id))));if(o)fetch(`${window.params.rest_url}mapster-wp-maps/feature?id=${o.id}`).then((t=>t.json())).then((t=>{""!==t.data[e]?y(t,e):window.alert(`This ${e} has no geographic data.`)}));else{var i=a.map((t=>t.id));k(P(e).find((t=>-1===i.indexOf(t))))}}function k(t){var e=l.findIndex((e=>e.id===t)),o=JSON.parse(JSON.stringify(l[e]));if(l.splice(e,1),"marker"!==o.data.location_style){var i=r.getFeatureType(o.data),s=r.getLayerType(i,o.data),p=n.createGeoJSON(i,s);a.getSource(s)&&a.getSource(s).setData(p)}else"marker"===o.data.location_style&&x()}function $(e){if(window.params.public){i.locations.concat(i.lines.concat(i.polygons)).forEach((t=>{y(t,r.getFeatureType(t.data))})),e()}else{var a=t('.acf-field[data-name="locations"] select').select2("data"),o=t('.acf-field[data-name="lines"] select').select2("data"),n=t('.acf-field[data-name="polygons"] select').select2("data");u=t('.acf-field[data-name="add_by_category"] select').select2("data").map((t=>t.id));var s=n.concat(o.concat(a)).map((t=>t.id));fetch(`${window.params.rest_url}mapster-wp-maps/features?ids=${JSON.stringify(s)}&categories=${JSON.stringify(u)}`).then((t=>t.json())).then((t=>{t.forEach((t=>{var e=r.getFeatureType(t.data);""!==t.data[e]&&y(t,e)})),e()}))}}function M(){c.forEach((t=>{a.hasControl(t)&&a.removeControl(t)}));var t=[];r.returnAllControls().forEach((a=>{s.returnControlActive(a)&&t.push(n.setControls(a,e,s))})),c=t}function P(t){return l.filter((e=>r.getFeatureType(e.data)===t)).map((t=>t.id))}function C(){"mapbox"===s.returnMapLibrary()?""!==s.returnAccessToken()?(mapboxgl.accessToken=window.params.public?i.map.map_type.access_token:t('.acf-field[data-name="access_token"]').find(":input").val(),e=mapboxgl):window.alert("You must enter an access token to use Mapbox."):"maplibre"===s.returnMapLibrary()&&(""!==s.returnAccessToken()&&(maplibregl.accessToken=window.params.public?i.map.map_type.access_token:t('.acf-field[data-name="access_token"]').find(":input").val()),e=maplibregl)}}(jQuery);